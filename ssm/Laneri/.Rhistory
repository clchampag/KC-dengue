library("lhs")
cmd <- sprintf("ssm")
system(cmd)
pwd
getwd
getwd()
theta_priors <- list(
R0 =list(dist="unif",args=list(min = 0, max = 20)),
beta1 = list(dist="unif",args=list(min = 0, max = 1)),
rep_ndss = list(dist="unif",args=list(min = 0, max = 1)),
psi = list(dist="unif",args=list(min = 0, max = 3)),
i =list(dist="unif",args=list(min = 0, max = 10)),
pr_gamma = list(dist="dirac",args=list(value = 4.5)),  # WHO
disp = list(dist="dirac",args=list(value=0.1)),
pr_S =list(dist="truncnorm",args=list(a = 0.2, b = 1, mean=0.44, sd=0.05)),
pr_S1 =list(dist="unif",args=list(min = 0.1, max = 1)),
pr_S2 =list(dist="unif",args=list(min = 0.1, max = 1)),
N = list(dist="dirac",args=list(value=161391 )), #population villages
phase = list(dist="unif",args=list(min = -0.5, max = 0.5)),
pr_I1 = list(dist="unif",args=list(min = 0, max = 100)),
pr_I2 = list(dist="unif",args=list(min = 0, max = 100)),
pr_sigma =list(dist="dirac",args=list(value = 15.9)), # chan and johansson 2012
mu = list(dist="dirac",args=list(value=0.0001826484 ))
)
priors <- list(
R0 =list(dist="unif",args=list(min = 0, max = 20)),
beta1 = list(dist="unif",args=list(min = 0, max = 1)),
rep_ndss = list(dist="unif",args=list(min = 0, max = 1)),
psi = list(dist="unif",args=list(min = 0, max = 3)),
i =list(dist="unif",args=list(min = 0, max = 10)),
pr_gamma = list(dist="dirac",args=list(value = 4.5)),  # WHO
disp = list(dist="dirac",args=list(value=0.1)),
pr_S =list(dist="truncnorm",args=list(a = 0.2, b = 1, mean=0.44, sd=0.05)),
pr_S1 =list(dist="unif",args=list(min = 0.1, max = 1)),
pr_S2 =list(dist="unif",args=list(min = 0.1, max = 1)),
N = list(dist="dirac",args=list(value=161391 )), #population villages
phase = list(dist="unif",args=list(min = -0.5, max = 0.5)),
pr_I1 = list(dist="unif",args=list(min = 0, max = 100)),
pr_I2 = list(dist="unif",args=list(min = 0, max = 100)),
pr_sigma =list(dist="dirac",args=list(value = 15.9)), # chan and johansson 2012
mu = list(dist="dirac",args=list(value=0.0001826484 ))
)
if(is.null(theta_names)){
theta <- rep(1, length(priors))
names(theta) <- names(priors)
prior_names <- names(priors)
} else {
theta <- rep(1, length(theta_names))
prior_names <- theta_names
}
theta_names=NULL
if(is.null(theta_names)){
theta <- rep(1, length(priors))
names(theta) <- names(priors)
prior_names <- names(priors)
} else {
theta <- rep(1, length(theta_names))
prior_names <- theta_names
}
if(is.null(names(theta_names))){
names(theta) <- theta_names
} else {
names(theta) <- names(theta_names)
}
for(i in seq_along(theta)){
prior <- priors[[prior_names[i]]]
if(prior$dist=="dirac"){
theta[i] <- prior$args$value
} else {
qprior <- paste0("q",prior$dist)
prior_args <- c(prior$args,index[i])
theta[i] <- do.call(qprior,prior_args)
}
}
index=1
for(i in seq_along(theta)){
prior <- priors[[prior_names[i]]]
if(prior$dist=="dirac"){
theta[i] <- prior$args$value
} else {
qprior <- paste0("q",prior$dist)
prior_args <- c(prior$args,index[i])
theta[i] <- do.call(qprior,prior_args)
}
}
library(truncnorm)
for(i in seq_along(theta)){
prior <- priors[[prior_names[i]]]
if(prior$dist=="dirac"){
theta[i] <- prior$args$value
} else {
qprior <- paste0("q",prior$dist)
prior_args <- c(prior$args,index[i])
theta[i] <- do.call(qprior,prior_args)
}
}
theta
if(is.null(theta_names)){
theta <- rep(1, length(priors))
names(theta) <- names(priors)
prior_names <- names(priors)
} else {
theta <- rep(1, length(theta_names))
prior_names <- theta_names
}
theta
theta="R0"
prior <- priors[[prior_names[i]]]
prior
prior_names
priors
priors[[prior_names[i]]]
i
for(i in seq_along(theta))
i
i
seq_along(theta)
theta
if(is.null(theta_names)){
theta <- rep(1, length(priors))
names(theta) <- names(priors)
prior_names <- names(priors)
} else {
theta <- rep(1, length(theta_names))
prior_names <- theta_names
}
if(is.null(names(theta_names))){
names(theta) <- theta_names
} else {
names(theta) <- names(theta_names)
}
seq_along(theta)
for(i in seq_along(theta))
{}
i
priors[[prior_names[i]]]
prior$args$value
library(truncnorm)
priors <- list(
R0 =list(dist="unif",args=list(min = 0, max = 20)),
beta1 = list(dist="unif",args=list(min = 0, max = 1)),
rep_ndss = list(dist="unif",args=list(min = 0, max = 1)),
psi = list(dist="unif",args=list(min = 0, max = 3)),
i =list(dist="unif",args=list(min = 0, max = 10)),
pr_gamma = list(dist="dirac",args=list(value = 4.5)),  # WHO
disp = list(dist="dirac",args=list(value=0.1)),
pr_S =list(dist="truncnorm",args=list(a = 0.2, b = 1, mean=0.44, sd=0.05)),
pr_S1 =list(dist="unif",args=list(min = 0.1, max = 1)),
pr_S2 =list(dist="unif",args=list(min = 0.1, max = 1)),
N = list(dist="dirac",args=list(value=161391 )), #population villages
phase = list(dist="unif",args=list(min = -0.5, max = 0.5)),
pr_I1 = list(dist="unif",args=list(min = 0, max = 100)),
pr_I2 = list(dist="unif",args=list(min = 0, max = 100)),
pr_sigma =list(dist="dirac",args=list(value = 15.9)), # chan and johansson 2012
mu = list(dist="dirac",args=list(value=0.0001826484 ))
)
sample_from_lhs <- function(priors, theta_names=NULL,index) {
if(is.null(theta_names)){
theta <- rep(1, length(priors))
names(theta) <- names(priors)
prior_names <- names(priors)
} else {
theta <- rep(1, length(theta_names))
prior_names <- theta_names
}
if(is.null(names(theta_names))){
names(theta) <- theta_names
} else {
names(theta) <- names(theta_names)
}
for(i in seq_along(theta)){
prior <- priors[[prior_names[i]]]
if(prior$dist=="dirac"){
theta[i] <- prior$args$value
} else {
qprior <- paste0("q",prior$dist)
prior_args <- c(prior$args,index[i])
theta[i] <- do.call(qprior,prior_args)
}
}
return(theta)
}
LHS_square <- randomLHS(sample_size, length(theta_estimated_names))
sample_size=10
LHS_square <- randomLHS(sample_size, length(theta_estimated_names))
theta_priors
names(priors)
priors
priors[prior$dist=="dirac"]
priors[prior$dist!="dirac"]
priors[priors$dist!="dirac"]
priors[prior$dist=="dirac"]
priors <- list(
R0 =list(dist="unif",args=list(min = 0, max = 20)),
beta1 = list(dist="unif",args=list(min = 0, max = 1)),
rep_ndss = list(dist="unif",args=list(min = 0, max = 1)),
psi = list(dist="unif",args=list(min = 0, max = 3)),
i =list(dist="unif",args=list(min = 0, max = 10)),
pr_S =list(dist="truncnorm",args=list(a = 0.2, b = 1, mean=0.44, sd=0.05)),
pr_S1 =list(dist="unif",args=list(min = 0.1, max = 1)),
pr_S2 =list(dist="unif",args=list(min = 0.1, max = 1)),
N = list(dist="dirac",args=list(value=161391 )), #population villages
phase = list(dist="unif",args=list(min = -0.5, max = 0.5)),
pr_I1 = list(dist="unif",args=list(min = 0, max = 100)),
pr_I2 = list(dist="unif",args=list(min = 0, max = 100)),
)
priors <- list(
R0 =list(dist="unif",args=list(min = 0, max = 20)),
beta1 = list(dist="unif",args=list(min = 0, max = 1)),
rep_ndss = list(dist="unif",args=list(min = 0, max = 1)),
psi = list(dist="unif",args=list(min = 0, max = 3)),
i =list(dist="unif",args=list(min = 0, max = 10)),
pr_S =list(dist="truncnorm",args=list(a = 0.2, b = 1, mean=0.44, sd=0.05)),
pr_S1 =list(dist="unif",args=list(min = 0.1, max = 1)),
pr_S2 =list(dist="unif",args=list(min = 0.1, max = 1)),
N = list(dist="dirac",args=list(value=161391 )), #population villages
phase = list(dist="unif",args=list(min = -0.5, max = 0.5)),
pr_I1 = list(dist="unif",args=list(min = 0, max = 100)),
pr_I2 = list(dist="unif",args=list(min = 0, max = 100))
)
theta_estimated_names <- names(priors)
LHS_square <- randomLHS(sample_size, length(theta_estimated_names))
i=1
init_theta <- sample_from_lhs(theta_priors, theta_estimated_names,index=LHS_square[s,])
init_theta <- sample_from_lhs(theta_priors, theta_estimated_names,index=LHS_square[s,])
s=1
init_theta <- sample_from_lhs(theta_priors, theta_estimated_names,index=LHS_square[s,])
names(init_theta) <- theta_estimated_names
theta_json <- list(resources=ssm_resources(init_theta, covmat))
init_theta
init_theta_json =   list(name="values",description="initial values for the parameters",data=as.list(theta))
init_theta_json
init_theta_json =   list(name="values",description="initial values for the parameters",data=as.list(init_theta))
init_theta_json
init_theta <- sample_from_lhs(theta_priors, theta_estimated_names,index=LHS_square[s,])
init_theta_json =   list(name="values",description="initial values for the parameters",data=as.list(init_theta))
init_theta_json
init_theta <- sample_from_lhs(theta_priors, theta_estimated_names,index=LHS_square[s,])
names(init_theta) <- theta_estimated_names
init_theta_json =   list(name="values",description="initial values for the parameters",data=as.list(init_theta))
covmat=diag(abs(init_theta)/10)
covmat
covmat=as.list(as.data.frame(diag(abs(init_theta)/10)))
covmat
covmat=as.list(as.data.frame(diag(abs(init_theta)/10)))
for(i in names(init_theta)){
x <- covmat[[i]]
x <- as.list(x)
names(x) <- rownames(covmat)
covmat[[i]] <- x[x!=0]
}
covmat
i
x <- covmat[[i]]
x
covmat[[i]]
covmat=as.list(as.data.frame(diag(abs(init_theta)/10)))
covmat=diag(abs(init_theta)/10)))
covmat=diag(abs(init_theta)/10)))
covmat=diag(abs(init_theta)/10)
colnames(covmat) = names(init_theta)
rownames(covmat) = names(init_theta)
covmat=as.list(as.data.frame(covmat))
covmat
for(i in names(init_theta)){
x <- covmat[[i]]
x <- as.list(x)
names(x) <- rownames(covmat)
covmat[[i]] <- x[x!=0]
}
covmat
init_theta <- sample_from_lhs(theta_priors, theta_estimated_names,index=LHS_square[s,])
names(init_theta) <- theta_estimated_names
init_theta_json =   list(name="values",description="initial values for the parameters",data=as.list(init_theta))
covmat=diag(abs(init_theta)/10)
colnames(covmat) = names(init_theta)
rownames(covmat) = names(init_theta)
covmat=as.list(as.data.frame(covmat))
for(i in names(init_theta)){
x <- covmat[[i]]
x <- as.list(x)
names(x) <- rownames(covmat)
covmat[[i]] <- x[x!=0]
}
covmat_json=   list(name="covariance",description="covariance matrix",data=covmat)
theta_json <- list(resources=ssm_resources(init_theta_json, covmat_json))
write(toJSON(theta_json),file=file.path(dir_lhs,paste0("theta_",s-1,".json")))
theta_json <- list(resources=(init_theta_json, covmat_json))
theta_json <- list(resources=list(init_theta_json, covmat_json))
write(toJSON(theta_json),file=file.path(dir_lhs,paste0("theta_",s-1,".json")))
dir_lhs <- file.path(dir_model,"lhs")
if(!file.exists(dir_lhs)){
dir.create(dir_lhs)
}
write(toJSON(theta_json),file=file.path("./",paste0("theta_",s-1,".json")))
library(rjson)
write(toJSON(theta_json),file=file.path("./",paste0("theta_",s-1,".json")))
setwd( "./SEIAR")
